/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.pagos;

import Utils.Calculos;
import controller.Control;
import java.util.Calendar;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Pago;
import model.Trabajador;

/**
 *
 * @author Daniel
 */
public class Pagar extends javax.swing.JInternalFrame {

    /**
     * Creates new form Pagar
     */
    public Pagar() {
        initComponents();

        List<Trabajador> trabaj = Control.trabajJPA.findTrabajadorEntities();

        for (int i = 0; i < trabaj.size(); i++) {
            ((DefaultTableModel) jTable1.getModel()).addRow(new Object[]{});
            Trabajador t = trabaj.get(i);
            jTable1.setValueAt(t, i, 0);
            jTable1.setValueAt(0d, i, 1);
            jTable1.setValueAt(0, i, 2);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Pagar mes");
        setMinimumSize(new java.awt.Dimension(550, 400));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trabajador", "Días trabajados", "Evaluación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 5, 10));

        jButton1.setText("Pagar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (validateTable()) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

            for (int i = 0; i < model.getRowCount(); i++) {
                Trabajador t = (Trabajador) model.getValueAt(i, 0);

                Pago p = new Pago();

                p.setIdTrabajador(t);
                p.setFecha(Calendar.getInstance().getTime());
                p.setDiasTrabajados((double) model.getValueAt(i, 1));
                p.setEvaluacion((int) model.getValueAt(i, 2));

                Double d = Calculos.calcAdic(t, (double) model.getValueAt(i, 1), (int) model.getValueAt(i, 2));
                System.out.println(d);
                
                p.setPagoAdicional(d);

                Control.pagosJPA.create(p);
            }

            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Existen campos con valores incorrectos", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean validateTable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        for (int i = 0; i < model.getRowCount(); i++) {
            for (int j = 1; j < model.getColumnCount(); j++) {
                if (Double.parseDouble(model.getValueAt(i, j).toString()) <= 0) {
                    return false;
                }
            }
        }

        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
